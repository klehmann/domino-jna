package com.mindoo.domino.jna.internal.structs;

import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesSSOTokenInfoDescStruct extends BaseStructure {
	/** currently must be set to 0 */
	public int dwStructVersion;
	/** currently not used */
	public int dwTokenVersion;
	/** C type : SECTOKENFORMAT */
	public int TokenType;
	/** C type : SSO_TOKEN_ITEM */
	public NotesSSOTokenItemStruct Username;
	/** C type : SSO_TOKEN_ITEM */
	public NotesSSOTokenItemStruct RawTokenUsername;
	/** C type : TIMEDATE */
	public NotesTimeDateStruct Creation;
	/** C type : TIMEDATE */
	public NotesTimeDateStruct Expiration;
	/** C type : SSO_LTPA2_ATTR* */
	public NotesSSOLTPA2AttrStruct AttributesList;
	/** C type : void* */
	public Pointer vpReservedTiming;
	/** C type : void* */
	public Pointer vpReserved;
	
	public NotesSSOTokenInfoDescStruct() {
		super();
	}
	
	public static NotesSSOTokenInfoDescStruct newInstance() {
		return AccessController.doPrivileged((PrivilegedAction<NotesSSOTokenInfoDescStruct>) () -> {
			return new NotesSSOTokenInfoDescStruct();
		});
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("dwStructVersion", "dwTokenVersion", "TokenType", "Username", "RawTokenUsername", "Creation", "Expiration", "AttributesList", "vpReservedTiming", "vpReserved");
	}
	
	public NotesSSOTokenInfoDescStruct(Pointer peer) {
		super(peer);
	}
	
	public static NotesSSOTokenInfoDescStruct newInstance(Pointer peer) {
		return AccessController.doPrivileged((PrivilegedAction<NotesSSOTokenInfoDescStruct>) () -> {
			return new NotesSSOTokenInfoDescStruct(peer);
		});
	}

	public static class ByReference extends NotesSSOTokenInfoDescStruct implements Structure.ByReference {
		
	};
	
	public static NotesSSOTokenInfoDescStruct.ByReference newInstanceByReference() {
		return AccessController.doPrivileged((PrivilegedAction<NotesSSOTokenInfoDescStruct.ByReference>) () -> {
			return new NotesSSOTokenInfoDescStruct.ByReference();
		});
	}

	public static class ByValue extends NotesSSOTokenInfoDescStruct implements Structure.ByValue {
		
	};
}
