package com.mindoo.domino.jna.internal;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NamedObjectEntryStruct extends Structure {
	public short NameOffset;
	public short NameLength;
	public short NameSpace;
	/** C type : NOTEID */
	public int NoteID;
	
	public NamedObjectEntryStruct() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("NameOffset", "NameLength", "NameSpace", "NoteID");
	}
	/** @param NoteID C type : NOTEID */
	public NamedObjectEntryStruct(short NameOffset, short NameLength, short NameSpace, int NoteID) {
		super();
		this.NameOffset = NameOffset;
		this.NameLength = NameLength;
		this.NameSpace = NameSpace;
		this.NoteID = NoteID;
	}
	public NamedObjectEntryStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends NamedObjectEntryStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends NamedObjectEntryStruct implements Structure.ByValue {
		
	};
}
